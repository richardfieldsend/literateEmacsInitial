# Configuration file - Built Using Org-Mode.
* Configuration file.
** Add Repositories and Configure Use Package Settings.
This file is used for all the settings used in my Emacs setup. The
file is built using Org-Mode which supports literate programming (a
concepy originally described by Donald Knuth, the Father of LaTeX). It
takes the concept of writing comments in your code and turns it on its
head, instead imagining a world where you write prose describing what
you are trying to achieve and how you plan on getting there, and then
you add code into the prose using code blocks.

In the case of Emacs, these code blocks can be in many different
languages but for the configuration file this will be Emacs Lisp
(elisp). The first block is required in order to set up the various
repositories (MELPA and ELPA) that will be used for the various
packages. This follows a discussion on Reddit here:

https://old.reddit.com/r/emacs/comments/dfcyy6/how_to_install_and_use_usepackage/

All future code blocks will be of a similar form:

#+begin_src emacs-lisp
  (eval-and-compile)
  (require 'package)
  (setq package-archives '(("elpa" . "https://elpa.gnu.org/packages/")
  ("melpa" . "https://melpa.org/packages/")
  ("gnu" . "https://elpa.gnu.org/packages")))
  (package-initialize)
  (package-refresh-contents)
  (unless (package-installed-p 'use-package)
  (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

** Built-in Customisations - Step 1.
The first settings implemented are those that don't require any
packages installed. The changes are largely about removing unnecessary
parts of the Emacs window such as the menu bar and toolbar.
# Clean up Emacs window removing the menu bar, tool bar and scroll bar.
#+begin_src emacs-lisp
  (menu-bar-mode 0)			; Turn off menu bar (file/edit)
  (tool-bar-mode 0)			; Turn off icons
  (blink-cursor-mode 0)			; Stop cursor blinking
  (scroll-bar-mode 0)			; Where we're going we don't need no scroll bar
  (display-time-mode 1)			; add clock into mode-line
#+end_src
Having switched off the unnecessary bits of the Emacs window what we
are left with is a much simpler interface.
** Built-in Customisations - Step 2.
The information displayed on starting Emacs varies depending on how
you enter the program. I have got in the habit of using Emacs Client
which is much faster to start subsequent windows, but which doesn't
display a splash screen. 
If starting Emacs with the 'normal' command a splash screen is, by
default, displayed. As I've just started the program I don't really
need this information, so I switch it off and display a piece of text
which is different for each platform I'm using. This was initially
done as a test of detecting which machine is being used in case I want
to specify different packages on different machines (currently I don't).
# Don't Display the Splash-Screen on Start-up.
#+begin_src emacs-lisp
  (setq inhibit-startup-message t)	; Splash screen disabled
#+end_src
** Built-in Customisations - Step 3.
In a recent discussion on Reddit about using Emacs for creative
writing there was a suggestion for a suitable font setup. Given that I
aim to use Emacs to write lots of text I would like it to be fairly
attractive in the process.
# Set a nicer font
#+begin_src emacs-lisp
  (variable-pitch-mode 1)			; for variable width font
  (visual-line-mode 1)
  (face-spec-set 'variable-pitch '((t :family "FreeSans")))
  ;; Taken from the following Reddit thread:
  ;; https://old.reddit.com/r/emacs/comments/g3otv4/packages_for_creative_writing/
  ;; Discussion is about using Emacs to write rather than code.
#+end_src
